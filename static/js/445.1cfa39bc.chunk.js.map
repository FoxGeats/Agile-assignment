{"version":3,"file":"static/js/445.1cfa39bc.chunk.js","mappings":"6LAwBA,EArBsB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAEtB,OACG,iCACG,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,SACIH,EAAOI,QAGX,SAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,wBAIA,SAACF,EAAA,EAAD,CAAYC,QAAQ,IAAIC,UAAU,IAAIC,KAAK,MAA3C,SACIJ,EAAOK,aAEX,SAACJ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,yBAKR,E,4DC2ED,EA1F2B,SAAC,GAA0B,IAAxBH,EAAuB,EAAvBA,OAAQM,EAAe,EAAfA,SACpC,GAA6CC,EAAAA,EAAAA,UAC3C,CAAC,UAAW,CAAEC,GAAIR,EAAOQ,KACzBC,EAAAA,IAFMC,EAAR,EAAQA,KAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,QAKjC,GAAID,EACF,OAAO,SAAC,IAAD,IAGT,GAAIC,EACF,OAAO,wBAAKF,EAAMG,UAEpB,IAAMC,EAASL,EAAKM,SAEpB,OACE,+BAGE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,GAAI,CAAEC,QAAS,QAA3C,WACE,SAACJ,EAAA,GAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,UACE,iBAAKH,GAAI,CACPI,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAHlB,WAKE,SAACC,EAAA,EAAD,CACIC,KAAM,EADV,SAEKb,EAAOc,KAAI,SAACC,GAAD,OACR,SAACC,EAAA,EAAD,CAAqCH,KAAM,EAA3C,UACA,gBACII,IAAG,0CAAqCF,EAAMG,WAC9CC,IAAKJ,EAAMG,aAHKH,EAAMG,UADlB,OAUhB,SAAChC,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAGA,SAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,wBAGA,SAACD,EAAA,EAAD,UACGD,EAAOmC,wBAEV,SAAClC,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAGA,SAACD,EAAA,EAAD,6BAGA,SAACA,EAAA,EAAD,CAAYC,QAAQ,KAApB,qBAGA,SAACD,EAAA,EAAD,UACkB,IAAhBD,EAAOoC,OAAa,SAAS,UAE/B,SAACnC,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBAGA,SAACD,EAAA,EAAD,UACGD,EAAOqC,YAEV,SAACpC,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BAGA,SAACD,EAAA,EAAD,UACED,EAAOsC,kBAET,SAACrC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BAGAF,EAAOuC,cAAcV,KAAI,SAACW,GAAD,OACzB,SAACvC,EAAA,EAAD,UACEuC,GADeA,EADQ,UAQ7B,SAACvB,EAAA,GAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACGjB,QAKV,E,gFC/FM,SAASmC,EAAgCC,GAC9C,OAAOC,EAAAA,EAAAA,GAAqB,sBAAuBD,EACpD,EAC+BE,E,QAAAA,GAAuB,sBAAuB,CAAC,OAAQ,iBAAkB,cAAe,gBAAiB,YAAa,kBAAmB,eAAgB,iBAAkB,yBAA0B,0BAA2B,QAAS,WAAY,aAAc,0BAA2B,6BAA9T,ICFMC,EAAY,CAAC,aAAc,iBAAkB,YAAa,WAAY,QAAS,YA6B/EC,GAAuBC,EAAAA,EAAAA,IAAO,MAAO,CACzC3C,KAAM,sBACNsC,KAAM,OACNM,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAAD,QAAYG,EAAAA,EAAAA,GAAWF,EAAWG,YAC9D,GAR0BP,EAS1B,YAGG,IAFJQ,EAEI,EAFJA,MACAJ,EACI,EADJA,WAEA,OAAOK,EAAAA,EAAAA,GAAS,CACdF,SAAU,WACVG,KAAM,EACNC,MAAO,EACPC,WAAY,qBACZnC,QAAS,OACToC,WAAY,SACZC,WAAYN,EAAMO,WAAWD,YACJ,WAAxBV,EAAWG,UAAyB,CACrCS,OAAQ,GACiB,QAAxBZ,EAAWG,UAAsB,CAClCU,IAAK,GACoB,UAAxBb,EAAWG,UAAwB,CACpCA,SAAU,WACVK,WAAY,cACZC,WAAY,UAEf,IACKK,GAA4BlB,EAAAA,EAAAA,IAAO,MAAO,CAC9C3C,KAAM,sBACNsC,KAAM,YACNM,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOgB,UAAWhB,EAAO,YAAD,QAAaG,EAAAA,EAAAA,GAAWF,EAAWG,YAAcH,EAAWgB,YAAcjB,EAAO,qBAAD,QAAsBG,EAAAA,EAAAA,GAAWF,EAAWiB,kBAC7J,GAR+BrB,EAS/B,YAGG,IAFJQ,EAEI,EAFJA,MACAJ,EACI,EADJA,WAEA,OAAOK,EAAAA,EAAAA,GAAS,CACda,SAAU,EACVhD,QAAS,YACTiD,OAAQf,EAAMgB,MAAQhB,GAAOiB,QAAQC,OAAOC,MAC5CC,SAAU,UACe,UAAxBxB,EAAWG,UAAwB,CACpCjC,QAAS,aACTiD,MAAO,WACNnB,EAAWgB,YAA4C,SAA9BhB,EAAWiB,gBAA6B,CAClEQ,YAAa,GACZzB,EAAWgB,YAA4C,UAA9BhB,EAAWiB,gBAA8B,CACnES,aAAc,GAEjB,IACKC,GAAwB/B,EAAAA,EAAAA,IAAO,MAAO,CAC1C3C,KAAM,sBACNsC,KAAM,QACNM,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAO6B,KAA1B,GAHShC,EAI3B,YAGD,MAAO,CACLiC,SAFE,EADJzB,MAGkBO,WAAWmB,QAAQ,IACnCC,WAAY,OACZC,aAAc,WACdR,SAAU,SACVS,WAAY,SAEf,IACKC,GAA2BtC,EAAAA,EAAAA,IAAO,MAAO,CAC7C3C,KAAM,sBACNsC,KAAM,WACNM,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOoC,QAA1B,GAHYvC,EAI9B,YAGD,MAAO,CACLiC,SAFE,EADJzB,MAGkBO,WAAWmB,QAAQ,IACnCC,WAAY,EACZC,aAAc,WACdR,SAAU,SACVS,WAAY,SAEf,IACKG,GAA6BxC,EAAAA,EAAAA,IAAO,MAAO,CAC/C3C,KAAM,sBACNsC,KAAM,aACNM,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOiB,WAAYjB,EAAO,sBAAD,QAAuBG,EAAAA,EAAAA,GAAWF,EAAWiB,kBAC/E,GARgCrB,EAShC,YAEG,IADJI,EACI,EADJA,WAEA,OAAOK,EAAAA,EAAAA,GAAS,CAAC,EAAiC,SAA9BL,EAAWiB,gBAA6B,CAC1DoB,OAAQ,GAEX,IAqGD,EApGsCC,EAAAA,YAAiB,SAA0BC,EAASC,GACxF,IAAM1C,GAAQ2C,EAAAA,EAAAA,GAAc,CAC1B3C,MAAOyC,EACPtF,KAAM,wBAIN+D,EAMElB,EANFkB,WADF,EAOIlB,EALFmB,eAAAA,OAFF,MAEmB,QAFnB,EAGEyB,EAIE5C,EAJF4C,UACAP,EAGErC,EAHFqC,SACAP,EAEE9B,EAFF8B,MALF,EAOI9B,EADFK,SAAAA,OANF,MAMa,SANb,EAQMwC,GAAQC,EAAAA,EAAAA,GAA8B9C,EAAOJ,GAE7CM,GAAaK,EAAAA,EAAAA,GAAS,CAAC,EAAGP,EAAO,CACrCK,SAAAA,EACAc,eAAAA,IAGI4B,EA9IkB,SAAA7C,GACxB,IACE6C,EAIE7C,EAJF6C,QACA1C,EAGEH,EAHFG,SACAa,EAEEhB,EAFFgB,WACAC,EACEjB,EADFiB,eAEI6B,EAAQ,CACZ7C,KAAM,CAAC,OAAD,mBAAoBC,EAAAA,EAAAA,GAAWC,KACrCY,UAAW,CAAC,YAAD,oBAA0Bb,EAAAA,EAAAA,GAAWC,IAAaa,GAAc,qBAAJ,QAAyBd,EAAAA,EAAAA,GAAWe,KAC3GW,MAAO,CAAC,SACRO,SAAU,CAAC,YACXnB,WAAY,CAAC,aAAD,8BAAqCd,EAAAA,EAAAA,GAAWe,MAE9D,OAAO8B,EAAAA,EAAAA,GAAeD,EAAOxD,EAAiCuD,EAC/D,CA+HiBG,CAAkBhD,GAClC,OAAoBiD,EAAAA,EAAAA,MAAMtD,GAAsBU,EAAAA,EAAAA,GAAS,CACvDL,WAAYA,EACZ0C,WAAWQ,EAAAA,EAAAA,GAAKL,EAAQ5C,KAAMyC,GAC9BF,IAAKA,GACJG,EAAO,CACRxF,SAAU,EAAc8F,EAAAA,EAAAA,MAAMnC,EAA2B,CACvDd,WAAYA,EACZ0C,UAAWG,EAAQ9B,UACnB5D,SAAU,EAAcgG,EAAAA,EAAAA,KAAKxB,EAAuB,CAClDe,UAAWG,EAAQjB,MACnBzE,SAAUyE,IACRO,GAAwBgB,EAAAA,EAAAA,KAAKjB,EAA0B,CACzDQ,UAAWG,EAAQV,SACnBhF,SAAUgF,IACP,QACHnB,GAA0BmC,EAAAA,EAAAA,KAAKf,EAA4B,CAC7DpC,WAAYA,EACZ0C,UAAWG,EAAQ7B,WACnB7D,SAAU6D,IACP,QAER,I,8BC1Kc,SAASoC,EAAkBvG,GAGxC,OAIE,SAAC2B,EAAA,EAAD,CACAP,GAAI,CAEAoF,aAAc,SACdC,oBAAqB,iDACrBC,gBAAiB,sBALrB,SAWG1G,EAAOA,OAAO2G,KAAK9E,KAAI,SAAC+E,GAAD,OACtB,UAAC7E,EAAA,EAAD,YACE,gBACEC,IAAG,0CAAqC4E,EAAKC,aAC7CC,OAAM,0CAAqCF,EAAKC,aAChD3E,IAAK0E,EAAK7B,MACVgC,QAAQ,UAER,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,EAAKpG,IAA1B,UACF,SAAC,EAAD,CAEEuE,MAAO6B,EAAK7B,MAEZZ,YAEE,SAAC8C,EAAA,EAAD,CACE7F,GAAI,CAAEkD,MAAO,6BACb,kCAA0BsC,EAAK7B,OAFjC,UAKE,SAACmC,EAAA,EAAD,YAnBYN,EAAKC,YADH,KA+B7B,CC/CD,IAuDA,EAvD0B,SAAC5D,GACzB,IAAQzC,GAAO2G,EAAAA,EAAAA,MAAP3G,GAKQ4G,GAAU7G,EAAAA,EAAAA,UACxB,CAAC,eAAgB,CAAEC,GAAIA,IACvB6G,EAAAA,IAFQ3G,KAKV,GAAoDH,EAAAA,EAAAA,UAClD,CAAC,UAAW,CAAEC,GAAIA,IAClB8G,EAAAA,IAFYtH,EAAd,EAAQU,KAAcC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,QASxC,OAAID,GACK,SAAC,IAAD,IAGLC,GACK,wBAAKF,EAAMG,WAMlB,8BACGd,GACC,+BACE,UAAC,EAAD,CAAcA,OAAQA,EAAtB,WACE,SAAC,EAAD,CAAeA,OAAQA,IAEtBoH,EAAOT,KAAKY,OAAO,GAClB,SAAC,EAAD,CAAavH,OAAQoH,KAGtB,iEAOL,qDAIP,C,2BC5DGI,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,qGACD,QAEJN,EAAQ,EAAUG,C","sources":["components/personDetails/index.js","components/templatePeoplePage/index.js","../node_modules/@mui/material/esm/ImageListItemBar/imageListItemBarClasses.js","../node_modules/@mui/material/esm/ImageListItemBar/ImageListItemBar.js","components/knownMovies/index.js","pages/personDetailsPage.js","../node_modules/@mui/icons-material/Info.js"],"sourcesContent":["import Typography from \"@mui/material/Typography\";\r\nimport React from \"react\";\r\n\r\nconst PersonDetails = ({ person }) => {  // Don't miss this!\r\n\r\n   return (\r\n      <>\r\n         <Typography variant=\"h3\" component=\"h3\">\r\n            {person.name}\r\n         </Typography>\r\n\r\n         <Typography variant=\"h6\" component=\"p\">\r\n            Biography\r\n         </Typography>\r\n\r\n         <Typography variant=\"p\" component=\"p\" name=\"bio\">\r\n            {person.biography}\r\n         </Typography>\r\n         <Typography variant=\"h6\" component=\"p\">\r\n            Known For\r\n         </Typography>\r\n      </>\r\n   );\r\n};\r\nexport default PersonDetails;","import Grid from \"@mui/material/Grid\";\r\nimport ImageList from \"@mui/material/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem\";\r\nimport { getPeopleImages } from \"../../api/tmdb-api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../spinner'\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst TemplatePeoplePage = ({ person, children }) => {\r\n  const { data , error, isLoading, isError } = useQuery(\r\n    [\"Persond\", { id: person.id }],\r\n    getPeopleImages\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n  const images = data.profiles \r\n\r\n  return (\r\n    <>\r\n      \r\n\r\n      <Grid container spacing={5} sx={{ padding: \"15px\" }} >\r\n        <Grid item xs={3} >\r\n          <div sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-around\",\r\n          }}>\r\n            <ImageList \r\n                cols={1}>\r\n                {images.map((image) => (\r\n                    <ImageListItem key={image.file_path} cols={1}>\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\r\n                        alt={image.file_path}\r\n                    />\r\n                    </ImageListItem>\r\n                ))}\r\n            </ImageList>\r\n\r\n            <Typography variant=\"h5\">\r\n              Personal Info\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              Known For\r\n            </Typography>\r\n            <Typography>\r\n              {person.known_for_department}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              Known Credits\r\n            </Typography>\r\n            <Typography>\r\n              Personal Info\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              Gender\r\n            </Typography>\r\n            <Typography >\r\n            {(person.gender===1 ? \"Female\":\"Male\")}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n             Birthday\r\n            </Typography>\r\n            <Typography>\r\n              {person.birthday}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              Place of Birth\r\n            </Typography>\r\n            <Typography >\r\n             {person.place_of_birth}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              Also Known As\r\n            </Typography>\r\n           {person.also_known_as.map((p)=>(\r\n            <Typography key={p}>\r\n             {p}\r\n            </Typography>\r\n           ) )} \r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={9}>\r\n          {children}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplatePeoplePage;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getImageListItemBarUtilityClass(slot) {\n  return generateUtilityClass('MuiImageListItemBar', slot);\n}\nconst imageListItemBarClasses = generateUtilityClasses('MuiImageListItemBar', ['root', 'positionBottom', 'positionTop', 'positionBelow', 'titleWrap', 'titleWrapBottom', 'titleWrapTop', 'titleWrapBelow', 'titleWrapActionPosLeft', 'titleWrapActionPosRight', 'title', 'subtitle', 'actionIcon', 'actionIconActionPosLeft', 'actionIconActionPosRight']);\nexport default imageListItemBarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"actionIcon\", \"actionPosition\", \"className\", \"subtitle\", \"title\", \"position\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getImageListItemBarUtilityClass } from './imageListItemBarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    position,\n    actionIcon,\n    actionPosition\n  } = ownerState;\n  const slots = {\n    root: ['root', `position${capitalize(position)}`],\n    titleWrap: ['titleWrap', `titleWrap${capitalize(position)}`, actionIcon && `titleWrapActionPos${capitalize(actionPosition)}`],\n    title: ['title'],\n    subtitle: ['subtitle'],\n    actionIcon: ['actionIcon', `actionIconActionPos${capitalize(actionPosition)}`]\n  };\n  return composeClasses(slots, getImageListItemBarUtilityClass, classes);\n};\n\nconst ImageListItemBarRoot = styled('div', {\n  name: 'MuiImageListItemBar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`position${capitalize(ownerState.position)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    background: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    alignItems: 'center',\n    fontFamily: theme.typography.fontFamily\n  }, ownerState.position === 'bottom' && {\n    bottom: 0\n  }, ownerState.position === 'top' && {\n    top: 0\n  }, ownerState.position === 'below' && {\n    position: 'relative',\n    background: 'transparent',\n    alignItems: 'normal'\n  });\n});\nconst ImageListItemBarTitleWrap = styled('div', {\n  name: 'MuiImageListItemBar',\n  slot: 'TitleWrap',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.titleWrap, styles[`titleWrap${capitalize(ownerState.position)}`], ownerState.actionIcon && styles[`titleWrapActionPos${capitalize(ownerState.actionPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({\n    flexGrow: 1,\n    padding: '12px 16px',\n    color: (theme.vars || theme).palette.common.white,\n    overflow: 'hidden'\n  }, ownerState.position === 'below' && {\n    padding: '6px 0 12px',\n    color: 'inherit'\n  }, ownerState.actionIcon && ownerState.actionPosition === 'left' && {\n    paddingLeft: 0\n  }, ownerState.actionIcon && ownerState.actionPosition === 'right' && {\n    paddingRight: 0\n  });\n});\nconst ImageListItemBarTitle = styled('div', {\n  name: 'MuiImageListItemBar',\n  slot: 'Title',\n  overridesResolver: (props, styles) => styles.title\n})(({\n  theme\n}) => {\n  return {\n    fontSize: theme.typography.pxToRem(16),\n    lineHeight: '24px',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap'\n  };\n});\nconst ImageListItemBarSubtitle = styled('div', {\n  name: 'MuiImageListItemBar',\n  slot: 'Subtitle',\n  overridesResolver: (props, styles) => styles.subtitle\n})(({\n  theme\n}) => {\n  return {\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: 1,\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap'\n  };\n});\nconst ImageListItemBarActionIcon = styled('div', {\n  name: 'MuiImageListItemBar',\n  slot: 'ActionIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.actionIcon, styles[`actionIconActionPos${capitalize(ownerState.actionPosition)}`]];\n  }\n})(({\n  ownerState\n}) => {\n  return _extends({}, ownerState.actionPosition === 'left' && {\n    order: -1\n  });\n});\nconst ImageListItemBar = /*#__PURE__*/React.forwardRef(function ImageListItemBar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiImageListItemBar'\n  });\n\n  const {\n    actionIcon,\n    actionPosition = 'right',\n    className,\n    subtitle,\n    title,\n    position = 'bottom'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    position,\n    actionPosition\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ImageListItemBarRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(ImageListItemBarTitleWrap, {\n      ownerState: ownerState,\n      className: classes.titleWrap,\n      children: [/*#__PURE__*/_jsx(ImageListItemBarTitle, {\n        className: classes.title,\n        children: title\n      }), subtitle ? /*#__PURE__*/_jsx(ImageListItemBarSubtitle, {\n        className: classes.subtitle,\n        children: subtitle\n      }) : null]\n    }), actionIcon ? /*#__PURE__*/_jsx(ImageListItemBarActionIcon, {\n      ownerState: ownerState,\n      className: classes.actionIcon,\n      children: actionIcon\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ImageListItemBar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * An IconButton element to be used as secondary action target\n   * (primary action target is the item itself).\n   */\n  actionIcon: PropTypes.node,\n\n  /**\n   * Position of secondary action IconButton.\n   * @default 'right'\n   */\n  actionPosition: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Position of the title bar.\n   * @default 'bottom'\n   */\n  position: PropTypes.oneOf(['below', 'bottom', 'top']),\n\n  /**\n   * String or element serving as subtitle (support text).\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Title to be displayed.\n   */\n  title: PropTypes.node\n} : void 0;\nexport default ImageListItemBar;","import * as React from 'react';\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function KnownForMovieList(person) {\r\n\r\n\r\n  return (\r\n   \r\n    \r\n  \r\n    <ImageList \r\n    sx={{ \r\n       \r\n        gridAutoFlow: \"column\",\r\n        gridTemplateColumns: \"repeat(auto-fit, minmax(160px,1fr)) !important\",\r\n        gridAutoColumns: \"minmax(160px, 1fr)\"\r\n        \r\n        }} >\r\n          \r\n       \r\n\r\n      {person.person.cast.map((know) => (\r\n        <ImageListItem key={know.poster_path}>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500/${know.poster_path}`}\r\n            srcSet={`https://image.tmdb.org/t/p/w500/${know.poster_path}`}\r\n            alt={know.title}\r\n            loading=\"lazy\"\r\n          />\r\n            <Link to={`/movies/${know.id}`}>\r\n          <ImageListItemBar\r\n          \r\n            title={know.title}\r\n            \r\n            actionIcon={\r\n            \r\n              <IconButton\r\n                sx={{ color: 'rgba(255, 255, 255, 0.54)' }}\r\n                aria-label={`info about ${know.title}`}\r\n               \r\n              >\r\n                <InfoIcon />\r\n              </IconButton>\r\n              \r\n            }\r\n          />\r\n          </Link>\r\n        </ImageListItem>\r\n      ))}\r\n    </ImageList>\r\n    \r\n  );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport PersonDetails from \"../components/personDetails/\";\r\nimport PageTemplate from \"../components/templatePeoplePage\";\r\nimport { getPerson,getPersonMovieCredits } from '../api/tmdb-api'\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../components/spinner'\r\nimport KnownMovies from \"../components/knownMovies\";\r\n\r\n\r\nconst PersonDetailsPage = (props) => {\r\n  const { id } = useParams();\r\n\r\n\r\n\r\n\r\n    const { data: people} = useQuery(\r\n    [\"MovieCredits\", { id: id }],\r\n    getPersonMovieCredits\r\n  );\r\n   \r\n  const { data: person, error, isLoading, isError } = useQuery(\r\n    [\"persond\", { id: id }],\r\n    getPerson\r\n  );\r\n\r\n\r\n  \r\n\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {person ? (\r\n        <>\r\n          <PageTemplate person={person}>\r\n            <PersonDetails person={person} />\r\n        \r\n            {people.cast.length>0?(\r\n              <KnownMovies person={people}/>\r\n            ):\r\n            (\r\n             <p>Waiting for more information...</p>\r\n            )\r\n            }\r\n          \r\n          </PageTemplate>\r\n        </>\r\n      ) : (\r\n        <p>Waiting for more details</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default PersonDetailsPage;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;"],"names":["person","Typography","variant","component","name","biography","children","useQuery","id","getPeopleImages","data","error","isLoading","isError","message","images","profiles","Grid","container","spacing","sx","padding","item","xs","display","flexWrap","justifyContent","ImageList","cols","map","image","ImageListItem","src","file_path","alt","known_for_department","gender","birthday","place_of_birth","also_known_as","p","getImageListItemBarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ImageListItemBarRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","position","theme","_extends","left","right","background","alignItems","fontFamily","typography","bottom","top","ImageListItemBarTitleWrap","titleWrap","actionIcon","actionPosition","flexGrow","color","vars","palette","common","white","overflow","paddingLeft","paddingRight","ImageListItemBarTitle","title","fontSize","pxToRem","lineHeight","textOverflow","whiteSpace","ImageListItemBarSubtitle","subtitle","ImageListItemBarActionIcon","order","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsxs","clsx","_jsx","KnownForMovieList","gridAutoFlow","gridTemplateColumns","gridAutoColumns","cast","know","poster_path","srcSet","loading","to","IconButton","Info","useParams","people","getPersonMovieCredits","getPerson","length","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}