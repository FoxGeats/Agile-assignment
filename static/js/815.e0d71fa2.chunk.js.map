{"version":3,"file":"static/js/815.e0d71fa2.chunk.js","mappings":"2TAce,SAASA,EAAT,GAAiC,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,OAKnC,OACE,UAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,KAAtB,WACE,SAACC,EAAA,EAAD,CAEEC,OACE,UAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,UACGT,EAAGU,KAAM,UAIhB,SAACC,EAAA,EAAD,CACER,GAAI,CAAES,OAAQ,KACdC,MACEb,EAAGc,YAAH,0CACuCd,EAAGc,aACtCC,KAGR,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAAf,WACE,SAACD,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACE,UAACb,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,WACE,SAAC,IAAD,CAAcY,SAAS,UACtBrB,EAAGsB,qBAGR,SAACL,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACE,UAACb,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,WACE,SAACc,EAAA,EAAD,CAAcF,SAAS,UACtB,KAFH,IAEUrB,EAAGwB,aAAc,eAKjC,UAACC,EAAA,EAAD,CAAaC,gBAAc,EAA3B,UACGzB,EAAOD,IACR,SAAC,KAAD,CAAM2B,GAAE,cAAS3B,EAAG4B,IAApB,UACE,SAACC,EAAA,EAAD,CAAQrB,QAAQ,WAAWsB,KAAK,SAASC,MAAM,UAA/C,kCAOT,CC3DD,IASA,EATe,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,IAAK/B,EAAa,EAAbA,OAMrB,OALa+B,EAAIC,KAAI,SAACC,GAAD,OACnB,SAACjB,EAAA,GAAD,CAAiBE,MAAI,EAACC,GAAI,GAAIe,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvD,UACE,SAAC,EAAD,CAAetC,GAAIkC,EAAGjC,OAAQA,GAArBiC,EAAEN,KADFM,EAAEN,GADM,GAMtB,ECUD,MAhBA,YAAqD,IAAvBI,EAAsB,EAAtBA,IAAK1B,EAAiB,EAAjBA,MAAOL,EAAU,EAAVA,OAIxC,OACE,UAACgB,EAAA,GAAD,CAAMC,WAAS,EAACf,GAAI,CAAEoC,QAAS,QAA/B,WACE,SAACtB,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CAAQd,MAAOA,OAEjB,SAACW,EAAA,GAAD,CAAME,MAAI,EAACD,WAAS,EAACsB,QAAS,EAA9B,UAEE,SAAC,EAAD,CAAQvC,OAAQA,EAAQ+B,IAAKA,QAIpC,E,uCCiBD,EA7Be,SAACS,GACd,OAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4CC,EAAAA,EAAAA,UAAS,CAAC,KAAM,CAAEF,KAAAA,IAASG,EAAAA,IAA/DC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,QAEhC,GAAID,EACF,OAAO,SAAC,IAAD,IAGT,GAAIC,EACF,OAAO,wBAAKF,EAAMG,UAEpB,IAAMC,EAAaL,EAAKM,YAClBrB,EAAMe,EAAKO,QAIjB,OACE,iCACE,SAAC,EAAD,CACEhD,MAAM,eACN0B,IAAKA,EACL/B,OAAQ,SAACD,GACP,OAAO,SAAC,IAAD,CAAoBuD,MAAOvD,GACnC,KAEH,SAAC,IAAD,CAAc2C,KAAMa,OAAOb,GAAOC,QAASA,EAASQ,WAAYI,OAAOJ,OAG5E,C","sources":["components/TVCard/index.js","components/TVList/index.js","components/templateTVListPage/index.js","pages/TVPage.js"],"sourcesContent":["import Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CalendarIcon from \"@mui/icons-material/CalendarTodayTwoTone\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport img from '../../images/film-poster-placeholder.png'\r\nimport { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport default function TVCard({ TV, action }) {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345 }}>\r\n      <CardHeader\r\n\r\n        title={\r\n          <Typography variant=\"h5\" component=\"p\">\r\n            {TV.name}{\" \"}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardMedia\r\n        sx={{ height: 500 }}\r\n        image={\r\n          TV.poster_path\r\n            ? `https://image.tmdb.org/t/p/w500/${TV.poster_path}`\r\n            : img\r\n        }\r\n      />\r\n      <CardContent>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <CalendarIcon fontSize=\"small\" />\r\n              {TV.first_air_date}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <StarRateIcon fontSize=\"small\" />\r\n              {\"  \"} {TV.vote_average}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        {action(TV)}\r\n        <Link to={`/TV/${TV.id}`}>\r\n          <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\r\n            More Info ...\r\n          </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport TV from \"../TVCard\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst TVList = ( {TVs, action }) => {\r\n  let TVCard = TVs.map((t) => (\r\n    <Grid key={t.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      <TV key={t.id} TV={t} action={action} />\r\n    </Grid>\r\n  ));\r\n  return TVCard;\r\n};\r\n\r\nexport default TVList;","import React from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport TVList from \"../TVList\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction TVListPageTemplate({ TVs, title, action }) {\r\n\r\n\r\n\r\n  return (\r\n    <Grid container sx={{ padding: '20px' }}>\r\n      <Grid item xs={12}>\r\n        <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5}>\r\n\r\n        <TVList action={action} TVs={TVs}></TVList>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default TVListPageTemplate;","import React, { useState } from \"react\";\r\nimport { getTVs } from \"../api/tmdb-api\";\r\nimport PageTemplate from '../components/templateTVListPage';\r\nimport { useQuery } from 'react-query';\r\nimport Spinner from '../components/spinner';\r\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites'\r\nimport MyPagination from \"../components/myPagination\";\r\n\r\nconst TVPage = (props) => {\r\n  const [page, setPage] = useState(1);\r\n  const { data, error, isLoading, isError } = useQuery(['Tv', { page }], getTVs)\r\n\r\n  if (isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>\r\n  }\r\n  const totalPages = data.total_pages;\r\n  const TVs = data.results;\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <PageTemplate\r\n        title=\"Discover TVs\"\r\n        TVs={TVs}\r\n        action={(TV) => {\r\n          return <AddToFavoritesIcon movie={TV} />\r\n        }}\r\n      />\r\n      <MyPagination page={Number(page)} setPage={setPage} totalPages={Number(totalPages)} />\r\n    </>\r\n  );\r\n};\r\nexport default TVPage;"],"names":["TVCard","TV","action","Card","sx","maxWidth","CardHeader","title","Typography","variant","component","name","CardMedia","height","image","poster_path","img","CardContent","Grid","container","item","xs","fontSize","first_air_date","StarRate","vote_average","CardActions","disableSpacing","to","id","Button","size","color","TVs","map","t","sm","md","lg","xl","padding","spacing","props","useState","page","setPage","useQuery","getTVs","data","error","isLoading","isError","message","totalPages","total_pages","results","movie","Number"],"sourceRoot":""}